# -*- coding: utf-8 -*-
"""PCA_3_variáveis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fka273ZBiS4K0JiSF66F9XqiZUfTwobw
"""

""" Análise dos Componentes Principais
    Autoria: Gabriel Passos
"""
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

# Carregar a base de dados
data = pd.read_excel('/caminho_do_arquivo.xlsx')

# Selecionar as variáveis de interesse
selected_data = data[['x1', 'x2', 'x3']]

# Executar PCA
pca = PCA(n_components=2)
principal_components = pca.fit_transform(selected_data)

# DataFrame com os componentes principais
pca_df = pd.DataFrame(data=principal_components, columns=['PC1', 'PC2'])

# Função para criar um biplot
def biplot(score, coeff, labels=None):
    xs = score[:, 0]
    ys = score[:, 1]
    n = coeff.shape[0]
    scalex = 1.0 / (xs.max() - xs.min())
    scaley = 1.0 / (ys.max() - ys.min())

    plt.figure(figsize=(10, 6))
    plt.scatter(xs * scalex, ys * scaley, c='blue', edgecolor='k', s=50)

    for i in range(n):
        plt.arrow(0, 0, coeff[i, 0], coeff[i, 1], color='r', alpha=0.5)
        if labels is None:
            plt.text(coeff[i, 0] * 1.15, coeff[i, 1] * 1.15, "Var" + str(i + 1), color='g', ha='center', va='center')
        else:
            plt.text(coeff[i, 0] * 1.15, coeff[i, 1] * 1.15, labels[i], color='g', ha='center', va='center', fontsize=12, bbox=dict(facecolor='white', alpha=0.5))

    plt.xlabel("Componente Principal 1")
    plt.ylabel("Componente Principal 2")
    plt.grid(True)
    plt.title('Biplot PCA')
    plt.show()

# Labels das variáveis originais
labels = ['x1', 'x2', 'x3']

# Plotar biplot
biplot(principal_components, pca.components_.T, labels)